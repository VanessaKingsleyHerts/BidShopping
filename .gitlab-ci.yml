image: python:3.10

variables:
  # avoid Python writing .pyc files to the repo
  PYTHONDONTWRITEBYTECODE: "1"
  # buffer stdout/stderr for faster logging
  PYTHONUNBUFFERED: "1"

stages:
  - lint
  - test

cache:
  paths:
    - .cache/pip

before_script:
  # create & activate a virtualenv
  - python -m venv .venv
  - source .venv/bin/activate
  # install dependencies
  - pip install --upgrade pip
  - pip install -r requirements.txt

lint:
  stage: lint
  script:
    - pip install flake8
    - flake8 .

test:
  stage: test
  image: python:3.10
  services:
    - name: postgres:13
      alias: db

  # Selenium standalone Chrome
    - name: selenium/standalone-chrome:latest
      alias: selenium
      
  variables:
    # configure Django to use the Postgres service
    POSTGRES_DB: bidshopping
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: ""
    DATABASE_URL: postgres://postgres:@db:5432/bidshopping
    STATIC_ROOT: /tmp/static
    
    # Point your tests at the Selenium service
    SELENIUM_REMOTE_URL: "http://selenium:4444/wd/hub"

  before_script:
    - python -m venv .venv && source .venv/bin/activate
    - pip install --upgrade pip
    - pip install -r requirements.txt
    - pip install selenium      # ensure selenium is installed
    
  script:
    # install psycopg2, if not already in your requirements
    - pip install psycopg2-binary
    # ensure the directory exists
    - mkdir -p $STATIC_ROOT
    # collect static (if used)
    - python manage.py collectstatic --noinput
    # apply migrations
    - python manage.py migrate --noinput
    # run the Django test suite
    - python manage.py test
  artifacts:
    when: always
    reports:
      junit: report.xml   # if you configure Djangoâ€™s test runner to output JUnit
    paths:
      - htmlcov           # if you generate coverage HTML
    expire_in: 1 week
