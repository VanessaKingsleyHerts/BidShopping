stages:
  - build
  - lint
  - test

variables:
  PYTHONDONTWRITEBYTECODE: "1"
  PYTHONUNBUFFERED: "1"
  POSTGRES_DB: "bidshopping"
  POSTGRES_USER: "postgres"
  POSTGRES_PASSWORD: "postgres"
  DATABASE_URL: "postgres://postgres:postgres@db:5432/bidshopping"
  STATIC_ROOT: "/tmp/static"
  DOCKER_TLS_CERTDIR: ""

# Build the Docker image and push to GitLab registry
build-image:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - docker build -t "$CI_REGISTRY_IMAGE/bidshopping:dev" .
    - docker push "$CI_REGISTRY_IMAGE/bidshopping:dev"
  only:
    - main

# Use the built image for subsequent jobs
image: "$CI_REGISTRY_IMAGE/bidshopping:dev"

services:
  - name: postgres:13
    alias: db

cache:
  paths:
    - .cache/pip

before_script:
  - mkdir -p "$STATIC_ROOT"

lint:
  stage: lint
  script:
    - flake8 .

test:
  stage: test
  script:
    - python manage.py collectstatic --noinput
    - python manage.py migrate --noinput
    - coverage run --source=. manage.py test --parallel --exclude-tag=functional
    - python manage.py runserver 0.0.0.0:8000 &
    - sleep 5
    - coverage run --append --source=. manage.py test --tag=functional
    - coverage report
  artifacts:
    when: always
    reports:
      junit: report.xml
    paths:
      - htmlcov/
      - functional_tests/screenshots/
    expire_in: 1 week
